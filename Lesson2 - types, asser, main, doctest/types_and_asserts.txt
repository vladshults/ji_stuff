1. Типы данных в Питон
2. Ассерты
3. Виды main (точки входа в поток выполнения программы)
4. Тесты без фреймворков средствами Питон

1.1
Целые числа	            -3, -2, -1, 0, 1, 2, 3	        int	a = int(input())
Вещественные числа	    -1.5, -1.1, 0.6, 1.7	        float a = float(input())
Комплексные числа	    −5i, 3+2i	                    complex	a = complex(input())
Булевы значения	        True, False	                    flag = True
NoneType	            None                    	    a = None
Строка	                'abracadabra'	                str	a = str(5)
Список	                [1, 2, 3], ['a', 'b', 'c']	    a = list(('a', 'b', 'c'))
Кортеж	                ('red', 'blue', 'green')	    a = tuple(('red', 'blue', 'green'))
Изменяемое множество	{'black', 'blue', 'white'}	    set	a = set(('black', 'blue', 'white'))
Неизменяемое множество	{'red', 'blue', 'green'}    	a = frozenset((2, 5, 3, 9))
Диапазон	            0, 1, 2, 3, 4, 5	            a = range(6)
Словарь	                {'color': 'red', 'model': 'VC6', \
                        'dimensions': '30x50',}	        a = dict(color='red', model='VC6', dimensions='30x50')
Байты	                b'\x00\x00\x00'	                a = bytes(3)
Байтовая строка	        (b'\x00\x00')	                a = bytearray(2)
Просмотр памяти	        0x1477a5813a00	                a = memoryview(bytes(15))


2.1
Ассерт реагирует на отрицалово, то есть на несовпадение ожидания, например
assert 3 == 3 это гуд (ничего не произойдет), а
assert 4 == 3 вызовет AssertionError

2.2
Ассертом можно проверять наличие непустого объекта, например, ассершнЕррор вызовут:
- нуль
- пустая строка
- пустой список
- пустой словарь
- пустое множество
- None


3.1
Нужно ли определять def main()


4.1
doctest.testmode()
